{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isReadOnly from '@stdlib/ndarray-base-assert-is-read-only';\n\n\n// MAIN //\n\n/**\n* Returns an array without singleton dimensions.\n*\n* ## Notes\n*\n* -   If a provided ndarray does not have any singleton dimensions, the function returns the provided ndarray unchanged.\n* -   If a provided ndarray does have singleton dimensions, the function returns a new ndarray view.\n*\n* @param {ndarray} x - input array\n* @returns {ndarray} squeezed array\n*\n* @example\n* import array from '@stdlib/ndarray-array';\n*\n* var x = array( [ [ 1, 2 ], [ 3, 4 ] ], {\n*     'ndmin': 5\n* });\n* // returns <ndarray>\n*\n* var shx = x.shape;\n* // returns [ 1, 1, 1, 2, 2 ]\n*\n* var y = removeSingletonDimensions( x );\n* // returns <ndarray>\n*\n* var shy = y.shape;\n* // returns [ 2, 2 ]\n*\n* var v = y.get( 0, 0 );\n* // returns 1\n*\n* v = y.get( 0, 1 );\n* // returns 2\n*\n* v = y.get( 1, 0 );\n* // returns 3\n*\n* v = y.get( 1, 1 );\n* // returns 4\n*/\nfunction removeSingletonDimensions( x ) {\n\tvar strides;\n\tvar shape;\n\tvar sh;\n\tvar st;\n\tvar N;\n\tvar i;\n\n\tsh = x.shape;\n\tst = x.strides;\n\tN = sh.length;\n\n\tstrides = [];\n\tshape = [];\n\n\t// Check for singleton dimensions...\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( sh[ i ] !== 1 ) {\n\t\t\tshape.push( sh[ i ] );\n\t\t\tstrides.push( st[ i ] );\n\t\t}\n\t}\n\tif ( shape.length === N ) {\n\t\t// We did not find any singleton dimensions...\n\t\treturn x;\n\t}\n\tif ( isReadOnly( x ) ) {\n\t\t// If provided a read-only view, the returned array should also be read-only...\n\t\treturn new x.constructor( x.dtype, x.data, shape, strides, x.offset, x.order, { // eslint-disable-line max-len\n\t\t\t'readonly': true\n\t\t});\n\t}\n\treturn new x.constructor( x.dtype, x.data, shape, strides, x.offset, x.order ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default removeSingletonDimensions;\n"],"names":["removeSingletonDimensions","x","strides","shape","sh","st","N","i","length","push","isReadOnly","constructor","dtype","data","offset","order","readonly"],"mappings":";;oGAmEA,SAASA,EAA2BC,GACnC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAUJ,IARAH,EAAKH,EAAEE,MACPE,EAAKJ,EAAEC,QACPI,EAAIF,EAAGI,OAEPN,EAAU,GACVC,EAAQ,GAGFI,EAAI,EAAGA,EAAID,EAAGC,IACF,IAAZH,EAAIG,KACRJ,EAAMM,KAAML,EAAIG,IAChBL,EAAQO,KAAMJ,EAAIE,KAGpB,OAAKJ,EAAMK,SAAWF,EAEdL,EAEHS,EAAYT,GAET,IAAIA,EAAEU,YAAaV,EAAEW,MAAOX,EAAEY,KAAMV,EAAOD,EAASD,EAAEa,OAAQb,EAAEc,MAAO,CAC7EC,UAAY,IAGP,IAAIf,EAAEU,YAAaV,EAAEW,MAAOX,EAAEY,KAAMV,EAAOD,EAASD,EAAEa,OAAQb,EAAEc,MACxE"}